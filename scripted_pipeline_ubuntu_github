pipeline {
	agent none
	stages {
		stage('Non-parallel') {
			agent {
				label 'built-in'
			}
			steps {
				echo "Checking out from Git repo!!";
				/* git branch: 'main', credentialsId: 'db659cff-55be-460e-b394-774d96b1d8dd', url: 'https://github.com/paulhand/Pipeline_Script.git' */
			}
		}
		
		stage('Parallel Runs') {
			parallel {
				/*stage('Check-Git-Secrets') {
					agent { label 'Ubuntu_Node_Group' }
					steps {
						sh 'rm trufflehog || true';
						sh 'docker run gesellix/trufflehog --json https://github.com/cehkunal/webapp > trufflehog';
						sh 'cat trufflehog';
					}
				}*/
				
				/*stage('Source Composition Analysis') {
					agent { label 'Ubuntu_Node_Group' }
					steps {
						sh 'rm owasp* || true';
						sh 'wget https://raw.githubusercontent.com/cehkunal/webapp/master/owasp-dependency-check.sh';
						sh 'chmod u+x owasp-dependency-check.sh';
						sh 'bash owasp-dependency-check.sh';
					}
				}*/
				
				/*stage('SAST') { 
					agent { label 'Ubuntu_Node_Group' }
					steps {
						withSonarQubeEnv('Sonar') {
							sh 'mvn sonar:sonar'
							sh 'cat target/sonar/report-task.txt'
						}
					}
				}*/
				
				stage('Build on Ubuntu_Node_Group') {
					agent {
						label 'Ubuntu_Node_Group'
					}
					steps {
						echo "Building on the Ubuntu_Node_Group!";
						sh './Build.sh';
						sh 'java -version'
						}
				}
			
			
				/*stage('Unit Test on Ubuntu_Node_Group') {
					agent {
						label 'Ubuntu_Node_Group'
					}
					steps {
							echo "Running the Unit Test!";
							sh './Unit.sh';
						}
				}*/
		
				
				stage('Deployed on Master') {
					agent {
						label 'built-in';
					}
					steps {
						echo "Deploying the Job on Master!";
						bat 'java -version'
						bat 'Deploy.bat'
					}
				}
			}
		}
	}
	post {
		always {
			echo 'This will always run'
		}
		success {
			echo 'This will run only if successful'
		}
		failure {
			echo 'This will run only if failed'
		}
		unstable {
			echo 'This will run only if the run was marked unstable'
		}
		changed {
			echo 'This will run only if the state of the pipeline has changed'
			echo 'For example, if the pipeline was previously failing but is now successful'
		}
	}
}
